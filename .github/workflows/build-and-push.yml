name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    paths:
      - 'back-end/**'
      - 'front-end/web/**'
      - '.github/workflows/build-and-push.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_OWNER: informatica-uaint
  IMAGE_REPO: horarioslabinf

jobs:
  # Job para detectar qué cambió
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check path filters
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'back-end/**'
            frontend:
              - 'front-end/web/**'

  # Job para build y push del Backend
  build-backend:
    name: Build Backend Image
    needs: detect-changes
    if: needs.detect-changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_REPO }}/backend
          tags: |
            type=raw,value=latest
            type=sha,prefix=sha-,format=short

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: ./back-end
          file: ./back-end/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_REPO }}/backend:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_REPO }}/backend:buildcache,mode=max
          platforms: linux/amd64

  # Job para build y push del Frontend
  build-frontend:
    name: Build Frontend Image
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_REPO }}/frontend
          tags: |
            type=raw,value=latest
            type=sha,prefix=sha-,format=short

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./front-end/web
          file: ./front-end/web/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_REPO }}/frontend:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_REPO }}/frontend:buildcache,mode=max
          platforms: linux/amd64

  # Job de resumen
  summary:
    name: Build Summary
    needs: [detect-changes, build-backend, build-frontend]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Print summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Backend built:** ${{ needs.detect-changes.outputs.backend }}" >> $GITHUB_STEP_SUMMARY
          echo "**Frontend built:** ${{ needs.detect-changes.outputs.frontend }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.detect-changes.outputs.backend }}" == "true" ]; then
            echo "✅ Backend image: \`ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_REPO }}/backend:latest\`" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.detect-changes.outputs.frontend }}" == "true" ]; then
            echo "✅ Frontend image: \`ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_REPO }}/frontend:latest\`" >> $GITHUB_STEP_SUMMARY
          fi
